---
- name: load variables
  tags: [common, secrets]
  include_vars: '{{ playbook_dir }}/secrets.env.yaml'

- name: check if cert manager exists
  shell:
    cmd: kubectl get service --all-namespaces
  delegate_to: 127.0.0.1
  register: kubectl_namespaces

# - name: Print kubectl get service --all-namespaces
#   debug:
#     var: kubectl_namespaces.stdout

- name: install cert manager
  shell:
    cmd: kubectl apply -f https://github.com/jetstack/cert-manager/releases/download/v1.8.0/cert-manager.yaml
  delegate_to: 127.0.0.1
  register: kubectl_traefik_cert_manager
  when: kubectl_namespaces.stdout.find('cert-manager') == -1

- name: create LetsEncrypt ClusterIssuer
  shell:
    cmd: cat files/lets-encrypt.yaml | envsubst | kubectl apply -f -
    chdir: '{{ playbook_dir }}/roles/infra/traefik'
  environment:
    EMAIL: '{{ email.server_owner }'
    API_TOKEN: '{{ cloudflare.api_token_base64 }}'
  delegate_to: 127.0.0.1
  register: kubectl_traefik_letsencrypt

- name: request wilcard cert
  shell:
    cmd: kubectl apply -f files/wildcard-cert.yaml
    chdir: '{{ playbook_dir }}/roles/infra/traefik'
  delegate_to: 127.0.0.1
  register: kubectl_traefik_wildcard

- name: copy traefik config file to manifests
  become: true
  copy:
    src: ../files/traefik-config.yaml
    dest: /var/lib/rancher/k3s/server/manifests/traefik-config.yaml
    owner: root
    group: root
    mode: '0600'

- name: expose Traefik dashboard
  shell:
    cmd: kubectl apply -f files/traefik-ingress.yaml
    chdir: '{{ playbook_dir }}/roles/infra/traefik'
  delegate_to: 127.0.0.1
  register: kubectl_traefik_dashboard

- name: force Https ingress
  shell:
    cmd: kubectl apply -f files/traefik-tls.yaml
    chdir: '{{ playbook_dir }}/roles/infra/traefik'
  delegate_to: 127.0.0.1
  register: kubectl_traefik_https
