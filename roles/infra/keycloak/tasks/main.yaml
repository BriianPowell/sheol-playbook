---
- name: load variables
  tags: [common, secrets]
  include_vars: '{{ playbook_dir }}/secrets.env.yaml'

- name: check if keycloak exists
  shell:
    cmd: kubectl get service --all-namespaces
  delegate_to: 127.0.0.1
  register: kubectl_namespaces

# - name: Print kubectl get service --all-namespaces
#   debug:
#     var: kubectl_namespaces.stdout

- name: create Keycloak namespace
  shell:
    cmd: kubectl create namespace keycloak
  delegate_to: 127.0.0.1
  register: kubectl_keycloak_namespace

- name: apply Keycloak secrets
  shell:
    cmd: cat files/keycloak-secrets.yaml | envsubst | kubectl apply -f -
    chdir: '{{ playbook_dir }}/roles/infra/keycloak'
  environment:
    DOMAIN: '{{ domain_name_64 }}'
    KC_ADMN: '{{ keycloak.service.admin_64 }}'
    KC_PASS: '{{ keycloak.service.admin_password_64 }}'
    PG_USER: '{{ keycloak.postgres.user_64 }}'
    PG_PASS: '{{ keycloak.postgres.password_64 }}'
    PG_DB: '{{ keycloak.postgres.db_64 }}'
  delegate_to: 127.0.0.1
  register: kubectl_keycloak_secrets

- name: apply Keycloak postgres
  shell:
    cmd: kubectl apply -f files/keycloak-postgres.yaml
    chdir: '{{ playbook_dir }}/roles/infra/keycloak'
  delegate_to: 127.0.0.1
  register: kubectl_keycloak_postgres

- name: apply Keycloak deployment
  shell:
    cmd: kubectl apply -f files/keycloak.yaml
    chdir: '{{ playbook_dir }}/roles/infra/keycloak'
  delegate_to: 127.0.0.1
  register: kubectl_keycloak_deployment

- name: apply Keycloak ingress
  shell:
    cmd: kubectl apply -f files/keycloak-ingress.yaml
    chdir: '{{ playbook_dir }}/roles/infra/keycloak'
  delegate_to: 127.0.0.1
  register: kubectl_keycloak_ingress
